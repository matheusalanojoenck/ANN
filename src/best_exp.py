import random
import matplotlib.pyplot as plt
import numpy as np
import math
from typing import List

def modelo(x):
    return 2 * math.exp(0.3 * x) + 3 * random.random()

# a, b = 0, 10
# x = a + (b - a) * np.random.rand(50)
# x.sort()
# y = [modelo(xi) for xi in x]

x = [0.0076, 0.0133, 0.028, 0.0296, 0.0428, 0.0505, 0.0642, 0.0697, 0.0795, 0.0909, 0.0997, 0.1079, 0.1135, 0.1224, 0.1341, 0.1413, 0.1558, 0.1601, 0.1773, 0.1814, 0.1874, 0.2011, 0.2119, 0.2227, 0.2321, 0.2375, 0.2478, 0.2527, 0.2707, 0.272, 0.2849, 0.295, 0.3076, 0.311, 0.3227, 0.3344, 0.3433, 0.3472, 0.3615, 0.3695, 0.3754, 0.392, 0.3974, 0.4025, 0.4137, 0.4274, 0.4361, 0.4413, 0.457, 0.4669, 0.4695, 0.4856, 0.486, 0.5028, 0.5062, 0.5212, 0.5255, 0.5365, 0.5506, 0.554, 0.5677, 0.5705, 0.5823, 0.5942, 0.5994, 0.6149, 0.6213, 0.6344, 0.6379, 0.648, 0.6568, 0.6651, 0.6799, 0.683, 0.6993, 0.7026, 0.716, 0.7214, 0.7312, 0.7392, 0.7551, 0.7598, 0.7705, 0.7795, 0.7877, 0.7989, 0.8077, 0.8199, 0.8303, 0.8407, 0.8464, 0.8515, 0.8688, 0.8781, 0.8858, 0.8915, 0.9053, 0.9154, 0.9241, 0.9278, 0.94, 0.9525, 0.9593, 0.9669, 0.9813, 0.9815, 0.9924, 1.0005, 1.0121, 1.0252, 1.0323, 1.041, 1.0548, 1.0637, 1.071, 1.08, 1.0881, 1.0939, 1.1078, 1.1149, 1.1295, 1.1362, 1.1464, 1.1499, 1.1663, 1.1685, 1.1836, 1.1962, 1.2017, 1.2138, 1.2154, 1.2247, 1.2413, 1.2518, 1.2525, 1.2693, 1.2743, 1.288, 1.2935, 1.3076, 1.3166, 1.322, 1.3304, 1.3454, 1.3516, 1.3628, 1.3683, 1.378, 1.3839, 1.4008, 1.4108, 1.4162, 1.4214, 1.4315, 1.4465, 1.4512, 1.4651, 1.4709, 1.4836, 1.4884, 1.5005, 1.5135, 1.5233, 1.5258, 1.5374, 1.5502, 1.5556, 1.5671, 1.5729, 1.5825, 1.592, 1.6068, 1.6136, 1.6182, 1.6339, 1.6431, 1.6534, 1.6563, 1.6639, 1.6797, 1.6827, 1.6969, 1.7102, 1.7142, 1.7237, 1.7312, 1.7385, 1.7561, 1.7583, 1.7716, 1.7848, 1.7881, 1.7973, 1.8116, 1.8139, 1.8235, 1.8383, 1.849, 1.8577, 1.8667, 1.8731, 1.8802, 1.894, 1.8991, 1.9075, 1.9183, 1.9305, 1.9399, 1.9526, 1.954, 1.9717, 1.9746, 1.9886, 1.9976, 2.0093, 2.0127, 2.0245, 2.0306, 2.038, 2.0497, 2.064, 2.0738, 2.0778, 2.0896, 2.0959, 2.1046, 2.1177, 2.129, 2.1342, 2.1432, 2.1507, 2.1609, 2.1758, 2.1789, 2.1936, 2.1975, 2.2127, 2.2193, 2.2284, 2.2426, 2.244, 2.2525, 2.2696, 2.2743, 2.281, 2.2929, 2.3032, 2.3166, 2.3247, 2.3301, 2.3368, 2.3518, 2.3602, 2.3684, 2.3747, 2.3898, 2.401, 2.4052, 2.4194, 2.426, 2.4367, 2.4399, 2.4569, 2.4607, 2.4685, 2.4828, 2.4904, 2.5008, 2.5055, 2.5155, 2.5326, 2.5396, 2.5458, 2.5553, 2.5682, 2.5767, 2.5818, 2.5922, 2.599, 2.6158, 2.6181, 2.6277, 2.6439, 2.6462, 2.6563, 2.6673, 2.6734, 2.6862, 2.6948, 2.7063, 2.7124, 2.7236, 2.7333, 2.7438, 2.755, 2.7645, 2.7753, 2.7774, 2.7871, 2.7952, 2.8042, 2.8213, 2.8238, 2.8363, 2.8467, 2.8561, 2.8662, 2.8726, 2.882, 2.891, 2.9015, 2.9131, 2.9239, 2.9313, 2.9402, 2.9451, 2.9587, 2.9657, 2.9764, 2.9836, 2.9921]
y = [3.6203, 3.5262, 3.5232, 3.0235, 2.7569, 2.8722, 3.005, 3.436, 3.2219, 2.4341, 2.1603, 4.0468, 4.9183, 3.8385, 2.992, 3.2641, 3.3681, 4.4306, 2.9384, 3.0631, 2.277, 3.0739, 3.1096, 3.5344, 3.3668, 2.5393, 4.0324, 3.0011, 3.4573, 3.231, 3.5486, 3.7153, 3.3784, 3.6073, 3.5944, 3.3048, 3.9799, 3.3665, 3.5696, 3.5116, 3.483, 3.7283, 3.8328, 3.8828, 3.5272, 3.3337, 3.7409, 3.7171, 3.7085, 3.8397, 3.8851, 3.8658, 3.905, 3.2245, 4.3133, 3.7541, 3.8734, 4.3275, 4.0662, 3.9349, 4.0226, 4.7369, 4.0706, 4.26, 5.64, 3.8859, 5.0583, 4.9086, 3.8337, 4.3743, 4.0488, 4.1292, 4.1616, 5.0495, 4.4504, 4.4754, 3.6275, 4.5932, 4.5749, 4.4286, 4.4513, 4.6318, 4.6122, 4.5064, 5.2549, 4.2288, 3.9732, 4.4782, 4.7879, 4.6463, 4.8698, 5.2292, 4.5979, 4.8983, 4.7401, 4.7276, 5.1471, 4.7786, 4.8894, 5.0784, 4.7751, 4.8573, 5.5162, 4.7904, 5.189, 5.157, 4.1617, 5.2871, 4.8653, 5.283, 5.2186, 5.0028, 5.4499, 5.2057, 5.2283, 5.3709, 5.3781, 3.665, 5.589, 5.7771, 5.3756, 3.6965, 5.8289, 5.814, 6.4086, 4.9426, 5.5996, 5.9487, 5.9849, 4.7252, 5.6621, 5.8239, 5.0583, 6.2102, 6.1686, 6.2876, 6.1082, 5.5018, 6.3618, 6.1817, 6.2699, 6.0495, 6.4467, 6.3152, 6.4725, 6.3382, 6.2416, 6.3976, 6.6729, 6.3531, 5.9239, 5.8918, 6.4918, 6.6062, 6.5079, 6.9021, 7.0345, 6.7934, 7.0877, 6.7411, 8.5502, 6.6038, 6.6162, 7.008, 7.108, 7.5776, 7.1478, 7.044, 7.4813, 8.0538, 7.1125, 7.5302, 8.2438, 7.9587, 7.5827, 7.5882, 7.3842, 7.7355, 7.5834, 7.6273, 8.7298, 7.7933, 8.86, 8.2834, 7.8242, 7.774, 8.1546, 8.008, 8.3326, 8.3054, 8.3997, 8.2921, 8.4869, 8.1421, 8.3993, 10.0926, 8.3454, 8.3468, 7.6486, 8.5192, 8.6086, 8.6387, 7.8292, 8.6783, 8.7477, 8.7879, 9.736, 8.9717, 9.2177, 9.5982, 7.7492, 9.1191, 9.4615, 9.0916, 9.2484, 9.6269, 9.6001, 10.4107, 8.6532, 10.5393, 11.3378, 10.3111, 9.2634, 9.723, 10.0031, 10.1336, 10.103, 10.7408, 10.3688, 9.8162, 10.2801, 10.29, 10.6031, 10.1985, 10.4488, 10.6801, 10.6738, 10.3604, 10.5079, 10.9019, 10.6263, 10.8933, 9.8468, 11.1746, 10.7098, 10.9478, 10.6613, 11.3483, 11.294, 11.596, 11.1991, 11.7902, 10.7192, 11.5294, 10.7595, 11.7291, 11.7383, 12.1115, 12.1578, 11.3586, 12.1122, 12.0021, 12.4994, 12.2974, 12.3272, 12.214, 12.4381, 12.765, 12.5625, 14.1111, 11.844, 12.9295, 12.6839, 12.8298, 12.9501, 12.9367, 13.0292, 14.2281, 13.5765, 13.4359, 13.1781, 13.3243, 13.9281, 13.6959, 13.8533, 13.9085, 13.7578, 14.0384, 14.1023, 14.3438, 14.459, 14.2808, 15.1375, 15.4909, 15.3113, 14.8272, 14.7131, 14.6456, 14.959, 14.9092, 15.1229, 15.4492, 15.1986, 15.3864, 14.5668, 15.3471, 15.656, 14.3531, 15.705, 15.6742, 15.8905, 16.2752, 16.1772, 16.4345, 16.3098, 16.9899, 14.8306, 16.0577, 16.7499, 14.921, 16.8436]
def best_exp(x: List[float], y: List[float]):
    sum_x = sum(x)
    sum_x2 = sum(xi ** 2 for xi in x)
    A = [[len(x), sum(x)], [sum_x, sum_x2]]
    y_ = [math.log(yi) for yi in y]
    sum_xy = sum(xi * yi for xi, yi in zip(x, y_))
    B = [sum(y_), sum_xy]
    a0, a1 = np.linalg.solve(A, B)
    a, b = math.exp(a0), a1
    return a, b

a, b = best_exp(x, y)

def bexp(x):
    return a * math.exp(b * x)

if __name__ == '__main__':

    print(a, b)
    t = np.linspace(min(x), max(x), 100)
    bexpt = [bexp(i) for i in t]
    plt.plot(t, bexpt)
    plt.scatter(x, y)
    plt.savefig('pontos_exp.png')
